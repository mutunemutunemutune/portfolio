const l=t=>typeof t=="object"&&typeof t.then=="function",i=[];function u(t,n,s=(o,r)=>o===r){if(t===n)return!0;if(!t||!n)return!1;const o=t.length;if(n.length!==o)return!1;for(let r=0;r<o;r++)if(!s(t[r],n[r]))return!1;return!0}function f(t,n=null,s=!1,o={}){n===null&&(n=[t]);for(const e of i)if(u(n,e.keys,e.equal)){if(s)return;if(Object.prototype.hasOwnProperty.call(e,"error"))throw e.error;if(Object.prototype.hasOwnProperty.call(e,"response"))return o.lifespan&&o.lifespan>0&&(e.timeout&&clearTimeout(e.timeout),e.timeout=setTimeout(e.remove,o.lifespan)),e.response;if(!s)throw e.promise}const r={keys:n,equal:o.equal,remove:()=>{const e=i.indexOf(r);e!==-1&&i.splice(e,1)},promise:(l(t)?t:t(...n)).then(e=>{r.response=e,o.lifespan&&o.lifespan>0&&(r.timeout=setTimeout(r.remove,o.lifespan))}).catch(e=>r.error=e)};if(i.push(r),!s)throw r.promise}const p=(t,n,s)=>f(t,n,!1,s);export{p as s};
